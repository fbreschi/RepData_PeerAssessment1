hist(dff$tsteps, main=" Total number of steps taken each day", col="yellow", breaks=5, xlab="Number of steps", xlim=c(0,25000),ylim=c(0,40))
mean(dff$tsteps)
> mean(dff$tsteps)
[1] 10766.19
median(dff$tsteps)
head(sdata)
weekdays(sdata$date)
?weekdays
weekdays(as.date(sdata$date))
weekdays(as.date(sdata[1,]$date))
weekdays(as.date("2012-10-01"))
as.Date(sdata$date)
weekdays(as.Date(sdata$date))
unique(weekdays(as.Date(sdata$date)))
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date))=="Monday"){
print("DOW")
}
#dff <- rbind(dff,(data.frame(date=rv[i],tsteps=sum(sdata[sdata$date==rv[i],]$steps))))
}
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date))=="Sunday"){
print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date))=="Monday"){
print ("WeekEnd")
}
#dff <- rbind(dff,(data.frame(date=rv[i],tsteps=sum(sdata[sdata$date==rv[i],]$steps))))
}
wk <- unique(weekdays(as.Date(sdata$date)))
wk
wk <- unique(weekdays(as.Date(sdata$date)))
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
wd <- c(wk[6], wk[7])
wd
wk <- unique(weekdays(as.Date(sdata$date)))
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
wd
we
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) IN wd){
print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) IN we){
print ("WeekEnd")
}
#dff <- rbind(dff,(data.frame(date=rv[i],tsteps=sum(sdata[sdata$date==rv[i],]$steps))))
}
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
print ("WeekEnd")
}
#dff <- rbind(dff,(data.frame(date=rv[i],tsteps=sum(sdata[sdata$date==rv[i],]$steps))))
}
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
print("DOW")
}
}
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
print ("WeekEnd")
}
#dff <- rbind(dff,(data.frame(date=rv[i],tsteps=sum(sdata[sdata$date==rv[i],]$steps))))
}
wdata <- cbind(sdata,data.frame())
wdata <- cbind(sdata,data.frame(dc=""))
wdata
head(wdata)
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- cbind(sdata,data.frame("dc"))
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,]$dc="weekday"
print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,]$dc="weekend"
print ("WeekEnd")
}
}
warnings()
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- cbind(sdata,data.frame(dc=""))
head(wdata)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,]$dc="weekday"
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,]$dc="weekend"
#print ("WeekEnd")
}
}
head(wdata)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- "weekday"
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- "weekend"
#print ("WeekEnd")
}
}
head(wdata)
warnings()
class(wdata[,4])
class(wd)
as.factor("weekend")
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- cbind(sdata,data.frame(dc=""))
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- as.factor("weekday")
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- as.factor("weekend")
#print ("WeekEnd")
}
}
warnings()
as.factor("weekday","weekend")
?as.factor
factor("weekday","weekend")
as.factor(c("weekday","weekend"))
z <- as.factor(c("weekday","weekend"))
z[1]
z[2]
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
wz <- as.factor(c("weekday","weekend"))
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- cbind(sdata,data.frame(dc=""))
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
#print ("WeekEnd")
}
}
wdata[1,4]
wdata[1,4] = "weekend"
wdata <- cbind(sdata,data.frame(dc=character()))
wdata <- cbind(sdata,data.frame(dc=char()))
wdata <- cbind(sdata,data.frame(dc=character()))
wdata <- cbind(sdata,data.frame(dc=character()))
wdata <- cbind(sdata,data.frame())
wdata <- cbind(sdata,data.frame(dc=""))
summary(wdata)
class(wdata$dc)
wdata <- cbind(sdata,data.frame(dc=character()))
wdata <- sdata
wdata$dc <- as.factor(c("weekday","weekend"))
head(wdata)
wdata$dc <- as.factor(c("",""))
head(wdata)
class(wdata$dc)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
#print ("WeekEnd")
}
}
wdata$dc <- ""
class(wdata$dc)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
#print ("WeekEnd")
}
}
head(wdata)
head(wdata,1000)
head(wdata,2000)
wdata$dc <- ""
wz <- c("weekday","weekend")
wz
wz[1]
wz[2]
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
#print("DOW")
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
#print ("WeekEnd")
}
}
head(wdata,2000)
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
wz <- c("weekday","weekend")
# Create a new data frame holding day classes (dc) from the filled-up one
wdata$dc <- ""
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata <- wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata <- wdata[i,4] <- wz[2]
}
}
head(wdata)
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
wz <- c("weekday","weekend")
# Create a new data frame holding day classes (dc) from the filled-up one
wdata$dc <- ""
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
}
}
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
wz <- c("weekday","weekend")
# Create a new data frame holding day classes (dc) from the filled-up one
wdata$dc <- ""
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
}
}
head(wdata)
head(sdata)
# Create a vector holding real used week-days
wk <- unique(weekdays(as.Date(sdata$date)))
# Create other two vectors for day class
wd <- c(wk[1], wk[2], wk[3], wk[4], wk[5])
we <- c(wk[6], wk[7])
# Initialize the new
wz <- c("weekday","weekend")
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- sdata
wdata$dc <- ""
head(wdata)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
}
}
head(wdata)
wdata[,4]=="weekday"
wdatawd <- wdata[wdata[,4]=="weekday"]
wdatawd <- wdata[wdata[,4]=="weekday",]
head(wdatawd)
head(wdatawd,2000)
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# WeekEnds DataSet
wdatawe <- wdata[wdata[,4]=="weekend",]
head(wdatawd)
head(wdatawe)
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# Averages per days
# WeekEnds DataSet
wdatawe <- wdata[wdata[,4]=="weekend",]
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the days for weekdays
dy <-  unique(wdatawd$date)
dy
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the days for weekdays
dy <-  unique(wdatawd$date)
# Averages per days
# WeekEnds DataSet
wdatawe <- wdata[wdata[,4]=="weekend",]
# A commodity vector holding the days for weekend
dx <-  unique(wdatawe$date)
dy
dx
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the days for weekdays
dy <-  unique(wdatawd$date)
dy
for (i in  1:length(dy)){
dfy <- rbind(dfy,(data.frame(date=dy[i],msteps=mean(wdatawd[wdatawd$date==dv[i],]$steps))))
}
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the days for weekdays
dy <-  unique(wdatawd$date)
# Averages per weekdays
dfy <- data.frame()
for (i in  1:length(dy)){
dfy <- rbind(dfy,(data.frame(date=dy[i],msteps=mean(wdatawd[wdatawd$date==dv[i],]$steps))))
}
dfy
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the days for weekdays
dy <-  unique(wdatawd$date)
# Averages per weekdays
dfy <- data.frame()
for (i in  1:length(dy)){
dfy <- rbind(dfy,(data.frame(date=dy[i],msteps=mean(wdatawd[wdatawd$date==dy[i],]$steps))))
}
dfy
wz
head(wdata)
wz <- as.factor(c("weekday","weekend"))
wdata <- sdata
wdata$dc <- ""
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
}
}
head(wdata)
wdata <- sdata
wdata$dc <- as.factor("","")
wdata <- sdata
wdata$dc <- as.factor()
wdata <- sdata
wdata$dc <- as.factor()
wdata <- sdata
wdata$dc <- ""
class(wdata$dc)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- "weekday"
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- "weekend"
}
}
class(wdata$dc)
head(wdata)
wdata <- sdata
wdata$dc <- as.factor(c("",""))
class(wdata$dc)
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- "weekday"
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- "weekend"
}
}
head(wdata)
# Initialize the new
wz <- as.factor(c("weekday","weekend"))
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- sdata
wdata$dc <- ""
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
}
}
head(wdata)
# Initialize the new
wz <- c("weekday","weekend")
# Create a new data frame holding day classes (dc) from the filled-up one
wdata <- sdata
wdata$dc <- ""
# Scan the filled-in vector and include the new variable weeklevel "weekday" | "weekend"
for (i in  1:nrow(sdata)){
if (weekdays(as.Date(sdata[i,]$date)) %in% wd){
wdata[i,4] <- wz[1]
}
else if (weekdays(as.Date(sdata[i,]$date)) %in% we){
wdata[i,4] <- wz[2]
}
}
head(wdata)
as.factor(wdata$dc)
wdata$dc <- as.factor(wdata$dc)
as.factor(wdata$dc)
head(wdata)
head(wdata,10)
head(wdata,2000)
nrow(wdata)
wdatawd <- wdata[wdata[,4]=="weekday",]
nrow(wdatawd)
wdatawe <- wdata[wdata[,4]=="weekend",]
nrow(wdatawe)
dy <-  unique(wdatawd$date)
dy
legth(dy)
length(dy)
dx <-  unique(wdatawe$date)
length(dx)
head(wdata,2000)
head(wdata)
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the days for weekdays
dy <-  unique(wdatawd$date)
# Averages per weekdays
dfy <- data.frame()
dy
# WeekDays DataSet
wdatawd <- wdata[wdata[,4]=="weekday",]
# A commodity vector holding the intervals for weekdays
dy <-  unique(wdatawd$interval)
# Averages per weekdays
dfy <- data.frame()
dfy
dy
length(dfy)
length(dy)
# Aggregate the mean for every 5 mins interval
for (i in  1:length(dy)){
dfy <- rbind(dfy,(data.frame(interval=dy[i],msteps=mean(wdatawd[wdatawd$interval==dy[i],]$steps))))
}
dfy
lot(wdatawd$interval,dfi$msteps, type="l", main=" Mean value of steps per 5 mins interval", xlab="5 mins intervals", ylab="Average steps", xlim=c(0,2500),ylim=c(0,250))
plot(wdatawd$interval,dfi$msteps, type="l", main=" Mean value of steps per 5 mins interval", xlab="5 mins intervals", ylab="Average steps", xlim=c(0,2500),ylim=c(0,250))
# Make the plot
plot(dfy$interval,dfy$msteps, type="l", main=" Mean value of steps per 5 mins interval", xlab="5 mins intervals", ylab="Average steps", xlim=c(0,2500),ylim=c(0,250))
# WeekEnds DataSet
wdatawe <- wdata[wdata[,4]=="weekend",]
# A commodity vector holding the days for weekend
dx <-  unique(wdatawe$interval)
# Averages per weekends
dfx <- data.frame()
for (i in  1:length(dx)){
dfx <- rbind(dfx,(data.frame(interval=dx[i],msteps=mean(wdatawe[wdatawe$interval==dy[i],]$steps))))
}
# Make the plot
plot(dfx$interval,dfx$msteps, type="l", main=" Mean value of steps per 5 mins interval - weekend", xlab="5 mins intervals", ylab="Average steps", xlim=c(0,2500),ylim=c(0,250))
# Make the plot
plot(dfy$interval,dfy$msteps, type="l", main=" Mean value of steps per 5 mins interval - weekdays", xlab="5 mins intervals", ylab="Average steps", xlim=c(0,2500),ylim=c(0,250))
for (i in  1:length(dx)){
dfx <- rbind(dfx,(data.frame(interval=dx[i],msteps=mean(wdatawe[wdatawe$interval==dy[i],]$steps))))
}
# Make the plot
plot(dfx$interval,dfx$msteps, type="l", main=" Mean value of steps per 5 mins interval - weekend", xlab="5 mins intervals", ylab="Average steps", xlim=c(0,2500),ylim=c(0,250))
